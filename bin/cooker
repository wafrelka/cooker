#!/bin/bash

set -ueo pipefail

REPLACE_URL="https://raw.githubusercontent.com/wafrelka/replace/master/replace"
DEFAULT_COOKER_CACHE_DIR="${XDG_CACHE_HOME:-"${HOME}/.cache"}/cooker"
COOKER_CACHE_DIR="${COOKER_CACHE_DIR:-"${DEFAULT_COOKER_CACHE_DIR}"}"
COOKER_BIN="$(dirname "$(readlink -f "$0")")"

info() {
    printf "[*] %s\n" "$*" >&2
}

run() {
    printf "\e[2m$ %s\e[m\n" "$*" >&2
    "$@"
}

run_ssh() {
    run ssh "${ssh_options[@]}" "${target}" "$@"
}

quote() {
    quoted=()
    for arg in "$@"; do
        quoted+=("$(printf "%q" "${arg}")")
    done
    printf "%s" "${quoted[*]}"
}

nodes=()
secrets=()
includes=()
envs=()
user=""
setup=""
target=""
ssh_options=()
ssh_agent=""
recipes=()

print_usage() {
    cat >&2 <<EOS
usage: $0 [OPTIONS] [RECIPES..]

OPTIONS:
    -h, --help:                print this usage and exit
    -n, --node NODE:           node file path
    -s, --secret SECRET:       secret file path
    -I, --include INCLUDE:     add INCLUDE to packed recipe
    -e, --env ENV=VALUE:       set environment variable
    -u, --user:                run \`mitamae\` without \`sudo\`
    -S, --setup:               run setup script
    -t, --target TARGET:       target ssh host (defaults to basename of last NODE)
    -F CONFIGFILE:             equivalent to \`-o -F -o CONFIGFILE\`
    -o, --ssh-option OPTION:   ssh option
    -A:                        enable ssh agent forwarding
EOS
}

while [ "$#" -ne 0 ]; do
    case "$1" in
        "-h" | "--help" ) print_usage; exit 0 ;;
        "-n" | "--node" ) nodes+=("$2"); shift 2 ;;
        "-s" | "--secret" ) secrets+=("$2"); shift 2 ;;
        "-I" | "--include" ) includes+=("$2"); shift 2 ;;
        "-e" | "--env" ) envs+=("$2"); shift 2 ;;
        "-u" | "--user" ) user="1"; shift 1 ;;
        "-S" | "--setup" ) setup="1"; shift 1 ;;
        "-t" | "--target" ) target="$2"; shift 2 ;;
        "-F" ) ssh_options+=("-F" "$2"); shift 2 ;;
        "-o" | "--ssh-option" ) ssh_options+=("$2"); shift 2 ;;
        "-A" ) ssh_agent="1"; shift 1 ;;
        * ) recipes+=("$1"); shift 1 ;;
    esac
done

if [ -z "${target}" ]; then
    for node in "${nodes[@]}"; do
        node_fname="$(basename "${node}")"
        target="${node_fname%.*}"
    done
fi

env_args=()
for env_var in "${envs[@]}"; do
    env_args+=("--env" "${env_var}")
done
apply_script="$(cat << EOS
#!/bin/bash
set -ue
rm_all() {
    if [ -f ./bin/cooker-apply ]; then
        d="\$(pwd)"
        cd / && rm -r "\${d}"
    fi
}
trap rm_all EXIT
if [ -n "${setup}" ]; then
    ./bin/cooker-setup ${user:+"--user"}
fi
./bin/cooker-apply \
    --node nodes \
    --mitamae ./bin/mitamae \
    $(quote "${env_args[@]}") \
    ${user:+"--user"} \
    $(quote "${recipes[@]}")
EOS
)"

info "checking target platform"
platform="$(run_ssh uname -sm)"
mitamae="${COOKER_CACHE_DIR}/mitamae-$(tr ' ' '-' <<< "${platform,,}")"

info "preparing \`mitamae\` executable"
run "${COOKER_BIN}/cooker-mitamae" --platform "${platform}" "${mitamae}"

replace="$(readlink -f "${COOKER_CACHE_DIR}/replace")"
if [ ! -f "${replace}" ]; then
    info "downloading \`replace\`"
    run mkdir -p "$(dirname "${replace}")"
    run curl -sSL -o "${replace}" "${REPLACE_URL}"
    run chmod +x "${replace}"
fi

info "packing recipes"
pack_args=()
for node in "${nodes[@]}"; do
    pack_args+=("--node" "${node}")
done
for secret in "${secrets[@]}"; do
    pack_args+=("--secret" "${secret}")
done
recipe_archive="$(mktemp --suffix=-cooker-recipes.tar.gz)"
rm_recipe_archive() { run rm "${recipe_archive}"; }
trap "rm_recipe_archive" EXIT
pack_args+=(
    --output "${recipe_archive}" --replace "${replace}"
    "${includes[@]}"
    "${mitamae}:bin/mitamae"
    "${COOKER_BIN}/cooker-apply:bin/cooker-apply"
    "${COOKER_BIN}/cooker-setup:bin/cooker-setup"
)
run "${COOKER_BIN}/cooker-pack" "${pack_args[@]}" <(cat <<< "${apply_script}")":apply"

info "transfering recipes"
remote_dir="$(run_ssh mktemp -d --suffix=-cooker-recipes)"
quoted_remote_dir="$(quote "${remote_dir}")"
run_ssh tar xz -C "${quoted_remote_dir}" -m < "${recipe_archive}"

info "applying recipes"
ssh_args=("-t")
if [ -n "${ssh_agent}" ]; then
    ssh_args+=("-A")
fi
run_ssh "${ssh_args[@]}" -- "cd ${quoted_remote_dir} && bash ./apply"
